{"version":3,"sources":["views/Reviews.js"],"names":["Reviews","useLocation","useState","reviews","setReviews","totalReviews","setTotalReviews","Status","IDLE","setStatus","setError","movieId","useParams","useEffect","PENDING","API","fetchReviews","then","data","total","total_results","results","RESOLVED","catch","error","REJECTED","className","styles","title","list","map","review","url","author_details","avatar_path","includes","slice","userAvatar","item","subtitle","author","src","alt","rating","content","id","text"],"mappings":"sQAMe,SAASA,IACLC,cAAjB,IAEA,EAA8BC,mBAAS,MAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAwCF,mBAAS,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAA4BJ,mBAASK,IAAOC,MAA5C,mBAAeC,GAAf,WACA,EAA0BP,qBAA1B,mBAAcQ,GAAd,WACQC,EAAYC,cAAZD,QAsBR,OAlBAE,qBAAU,WACRJ,EAAUF,IAAOO,SAEjBC,IAAIC,aAAaL,GACdM,MAAK,SAAAC,GACJ,IAAMC,EAAQD,EAAKE,cAGnBd,EAAgBa,GAChBf,EAAWc,EAAKG,SAChBZ,EAAUF,IAAOe,aAElBC,OAAM,SAAAC,GACLd,EAASc,GACTf,EAAUF,IAAOkB,eAEpB,IAGD,qCACE,oBAAIC,UAAWC,IAAOC,MAAtB,qBACCvB,EAAe,EACd,oBAAIqB,UAAWC,IAAOE,KAAtB,SACG1B,EAAQ2B,KAAI,SAAAC,GAAW,IAAD,EACjBC,EAAG,OAAGD,QAAH,IAAGA,GAAH,UAAGA,EAAQE,sBAAX,aAAG,EAAwBC,YAC9BF,IACFA,EAAMA,EAAIG,SAAS,QACfH,EAAII,MAAM,GADR,UA5BJ,uDA4BI,OAEYL,EAAOE,eAAeC,cAG1C,IAAMG,EACJL,GACA,0FAEF,OACE,qBAAoBN,UAAWC,IAAOW,KAAtC,UACE,qBAAIZ,UAAWC,IAAOY,SAAtB,iCACuBR,EAAOS,UAE9B,qBACEd,UAAWC,IAAOU,WAClBI,IAAKJ,EACLK,IAAI,gBAEN,yCAAYX,EAAOE,eAAeU,UAClC,4BAAIZ,EAAOa,YAVJb,EAAOc,SAgBtB,mBAAGnB,UAAWC,IAAOmB,KAArB","file":"static/js/reviews.ff37d008.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { useParams, useLocation } from 'react-router-dom';\r\nimport API from '../services/themoviedbApi';\r\nimport Status from '../services/Status';\r\nimport styles from './MovieDetails.module.css';\r\n\r\nexport default function Reviews() {\r\n  const location = useLocation();\r\n\r\n  const [reviews, setReviews] = useState(null);\r\n  const [totalReviews, setTotalReviews] = useState(0);\r\n  const [status, setStatus] = useState(Status.IDLE);\r\n  const [error, setError] = useState();\r\n  const { movieId } = useParams();\r\n\r\n  const imageUrl = `https://www.themoviedb.org/t/p/w600_and_h900_bestv2`;\r\n\r\n  useEffect(() => {\r\n    setStatus(Status.PENDING);\r\n\r\n    API.fetchReviews(movieId)\r\n      .then(data => {\r\n        const total = data.total_results;\r\n\r\n        // const reviews = data.results[0].content;\r\n        setTotalReviews(total);\r\n        setReviews(data.results);\r\n        setStatus(Status.RESOLVED);\r\n      })\r\n      .catch(error => {\r\n        setError(error);\r\n        setStatus(Status.REJECTED);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h2 className={styles.title}>Reviews</h2>\r\n      {totalReviews > 0 ? (\r\n        <ul className={styles.list}>\r\n          {reviews.map(review => {\r\n            let url = review?.author_details?.avatar_path;\r\n            if (url) {\r\n              url = url.includes('http')\r\n                ? url.slice(1)\r\n                : `${imageUrl}${review.author_details.avatar_path}`;\r\n            }\r\n\r\n            const userAvatar =\r\n              url ||\r\n              'https://www.focusedu.org/wp-content/uploads/2018/12/circled-user-male-skin-type-1-2.png';\r\n\r\n            return (\r\n              <li key={review.id} className={styles.item}>\r\n                <h2 className={styles.subtitle}>\r\n                  Author (user name): {review.author}\r\n                </h2>\r\n                <img\r\n                  className={styles.userAvatar}\r\n                  src={userAvatar}\r\n                  alt=\"user avatar\"\r\n                />\r\n                <p>Rating: {review.author_details.rating}</p>\r\n                <p>{review.content}</p>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      ) : (\r\n        <p className={styles.text}>\r\n          \"We don't have any reviews for this movie\"\r\n        </p>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}